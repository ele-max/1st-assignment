1 Simple Array Sum

import math
import os
import random
import re
import sys

#
# Complete the 'simpleArraySum' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY ar as parameter.
#

def simpleArraySum(ar):
    # Write your code here
    total = 0
    for num in ar:
        total += num
    return total

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    ar_count = int(input().strip())

    ar = list(map(int, input().rstrip().split()))

    result = simpleArraySum(ar)

    fptr.write(str(result) + '\n')

    fptr.close()


2 compare tripletes 
import math
import os
import random
import re
import sys

#
# Complete the 'compareTriplets' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER_ARRAY a
#  2. INTEGER_ARRAY b
#

def compareTriplets(a, b):
    # Write your code here
     alice = 0
     bob = 0 
     for i in range(len(b)):
        if b[i] > a[i]:
            bob += 1
     for i in range (len(a)):
        if a[i] > b[i]:
            alice += 1
            
            
 3 a very big sum
import math
import os
import random
import re
import sys

#
# Complete the 'aVeryBigSum' function below.
#
# The function is expected to return a LONG_INTEGER.
# The function accepts LONG_INTEGER_ARRAY ar as parameter.
#

def aVeryBigSum(ar):
    # Write your code here
     return sum(ar)
     
4 diagonal difference 
def diagonalDifference(arr):
    # Write your code here
    a = 0
    b = 0
    for i in range (0, len(arr)):
        a = a + arr[i][i]
    for j in range(0, len(arr)):
        b = b + arr[j][len(arr)-1-j]
    return abs (a - b)
    
    
5 plus minus
def plusMinus(arr):
    # Write your code here
    n = len(arr)
    positive_count = 0
    negative_count = 0
    zero_count = 0
    for num in arr:
        if num > 0:
            positive_count += 1
        elif num < 0:
            negative_count += 1
        else:
            zero_count += 1
    positive_prop = positive_count / n
    negative_prop = negative_count / n
    zero_prop = zero_count / n
    print('{:.6f}'.format(positive_prop))
    print('{:.6f}'.format(negative_prop))
    print('{:.6f}'.format(zero_prop))


6 staircase
def staircase(n):
    for i in range(1, n+1):
        print(' '*(n-i) + '#'*i
        
        
7 mini-max sum


def miniMaxSum(arr):
    # Write your code here
    arr.sort()
    tot_sum =sum(arr)
    for i in range(1):
        print (str(tot_sum - max(arr))+ " " + str(tot_sum - min(arr))
        
        
8  bithday cake candles 

def birthdayCakeCandles(candles):
    # Write your code here
    total = 0
    max_heigth = max(candles)
    for i in range(len(candles)):
        if (candles[i] == max_heigth):
            total += 1
    return total


9 time conversion
def timeConversion(s):
    # Write your code here
    
    hour = int(s[0:2])
    minute = int(s[3:5])
    second = int(s[6:8])
    
    if s[-2:] == 'PM' and hour != 12:
        hour += 12
    
    elif s[-2:] == 'AM' and hour == 12:
        hour = 0
    
    return '{:02d}:{:02d}:{:02d}'.format(hour, minute, second)  
    
 10 solve me first
    
    def solveMeFirst(a,b):
	return a + b

num1 = int(input())
num2 = int(input())
res = solveMeFirst(num1,num2)
print(res)


